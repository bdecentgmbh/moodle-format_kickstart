{"version":3,"file":"formatkickstart.min.js","sources":["../src/formatkickstart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defines Kicstart javascript.\n * @module   format_kickstart/formatkickstart\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n define(['core/str', 'core/notification', 'core/config', 'core/ajax'],\n function(str, notification, Config, Ajax) {\n\n    /**\n     * Controls kicstart javascript.\n     * @param {int} contextid\n     * @param {int} courseid\n     * @return {void}\n    */\n    var Formatkickstart = function(contextid, courseid) {\n        var self = this;\n        var useTemplate = document.querySelectorAll(\".templates-block .use-template\");\n        self.contextId = contextid;\n        self.courseId = courseid;\n        if (useTemplate) {\n            useTemplate.forEach((element) => {\n                element.addEventListener('click', self.templateHandler.bind(this));\n            });\n        }\n    };\n\n\n    Formatkickstart.prototype.confirmbutton = \".buttons .singlebutton form button\";\n\n    Formatkickstart.prototype.loadiconElement = \"#modal-footer span#load-action\";\n\n    Formatkickstart.prototype.contextId = null;\n\n    Formatkickstart.prototype.courseId = null;\n\n\n    Formatkickstart.prototype.templateHandler = function(event) {\n        var self = this;\n        event.preventDefault();\n        let templateName = event.target.getAttribute(\"data-templatename\");\n        let templateId = event.target.getAttribute(\"data-template\");\n        self.confirmImportTemplate(templateId, templateName);\n    };\n\n    Formatkickstart.prototype.confirmImportTemplate = function(templateId, templateName) {\n        let self = this;\n        var plugindata = {\n            name: templateName\n        };\n        str.get_strings([\n            {key: 'confirm', component: 'core'},\n            {key: 'confirmtemplate', param: plugindata, component: 'format_kickstart'},\n            {key: 'import'},\n            {key: 'no'}\n        ]).done(function(s) {\n                notification.confirm(s[0], s[1], s[2], s[3], function() {\n                    document.querySelectorAll(\"body\")[0].classList.add(\"kickstart-icon\");\n                    Ajax.call([{\n                        methodname: 'format_kickstart_import_template',\n                        args: {templateid: templateId, courseid: self.courseId},\n                        done: function(response) {\n                            if (response) {\n                                let redirect = Config.wwwroot + \"/course/view.php?id=\" + self.courseId;\n                                window.location.assign(redirect);\n                            }\n                        }\n                    }]);\n                });\n            }\n        );\n    };\n\n    return {\n        init: function(contextid, courseid) {\n            return new Formatkickstart(contextid, courseid);\n        }\n    };\n});"],"names":["define","str","notification","Config","Ajax","Formatkickstart","contextid","courseid","self","this","useTemplate","document","querySelectorAll","contextId","courseId","forEach","element","addEventListener","templateHandler","bind","prototype","confirmbutton","loadiconElement","event","preventDefault","templateName","target","getAttribute","templateId","confirmImportTemplate","plugindata","name","get_strings","key","component","param","done","s","confirm","classList","add","call","methodname","args","templateid","response","redirect","wwwroot","window","location","assign","init"],"mappings":";;;;;;;AAsBCA,0CAAO,CAAC,WAAY,oBAAqB,cAAe,cACxD,SAASC,IAAKC,aAAcC,OAAQC,UAQ7BC,gBAAkB,SAASC,UAAWC,cAClCC,KAAOC,KACPC,YAAcC,SAASC,iBAAiB,kCAC5CJ,KAAKK,UAAYP,UACjBE,KAAKM,SAAWP,SACZG,aACAA,YAAYK,SAASC,UACjBA,QAAQC,iBAAiB,QAAST,KAAKU,gBAAgBC,KAAKV,kBAMxEJ,gBAAgBe,UAAUC,cAAgB,qCAE1ChB,gBAAgBe,UAAUE,gBAAkB,iCAE5CjB,gBAAgBe,UAAUP,UAAY,KAEtCR,gBAAgBe,UAAUN,SAAW,KAGrCT,gBAAgBe,UAAUF,gBAAkB,SAASK,OAEjDA,MAAMC,qBACFC,aAAeF,MAAMG,OAAOC,aAAa,qBACzCC,WAAaL,MAAMG,OAAOC,aAAa,iBAHhClB,KAINoB,sBAAsBD,WAAYH,eAG3CpB,gBAAgBe,UAAUS,sBAAwB,SAASD,WAAYH,kBAC/DjB,KAAOC,SACPqB,WAAa,CACbC,KAAMN,cAEVxB,IAAI+B,YAAY,CACZ,CAACC,IAAK,UAAWC,UAAW,QAC5B,CAACD,IAAK,kBAAmBE,MAAOL,WAAYI,UAAW,oBACvD,CAACD,IAAK,UACN,CAACA,IAAK,QACPG,MAAK,SAASC,GACTnC,aAAaoC,QAAQD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,WACzC1B,SAASC,iBAAiB,QAAQ,GAAG2B,UAAUC,IAAI,kBACnDpC,KAAKqC,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CAACC,WAAYhB,WAAYrB,SAAUC,KAAKM,UAC9CsB,KAAM,SAASS,aACPA,SAAU,KACNC,SAAW3C,OAAO4C,QAAU,uBAAyBvC,KAAKM,SAC9DkC,OAAOC,SAASC,OAAOJ,sBAS5C,CACHK,KAAM,SAAS7C,UAAWC,iBACf,IAAIF,gBAAgBC,UAAWC"}